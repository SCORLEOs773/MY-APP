{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","Components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","src","Link","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","placeholder","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","_useState3","_useState4","remark","setRemark","heading","style","backgroundColor","value","rows","onChange","event","target","disabled","length","onClick","newText","toUpperCase","toLowerCase","split","i","slice","join","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","marginLeft","filter","element","Alert","height","alert","word","lower","charAt","capitalize","message","About","textMode","data-bs-parent","defaultProps","App","setMode","setTextMode","_useState5","_useState6","setAlert","_useState7","color","_useState8","myStyle","setMyStyle","_useState9","_useState10","btnText","setBtnText","showAlert","setTimeout","Router","borderRadius","Routes","Route","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.1f8683d4.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n\r\n            <div className=\"container-fluid\">\r\n                <img src='\\favicon-32x32.png' />\r\n                {/* <a className=\"navbar-brand mx-2\" href=\"/\">{props.title}</a> */}\r\n                <Link className=\"navbar-brand mx-2\" to=\"/\">{props.title}</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            {/* <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a> */}\r\n                            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            {/* <a className=\"nav-link\" href=\"/about\">About</a> */}\r\n                            <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                        </li>\r\n                    </ul>\r\n\r\n                    <form className=\"d-flex\" role=\"search\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: \"TextUtils\"\r\n}\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const toUpperCase = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        setRemark(\"Text Converted To Upper Case!\")\r\n    }\r\n\r\n    const toLowerCase = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        setRemark(\"Text Converted To LowerCase!\")\r\n    }\r\n\r\n    const toTitleCase = () => {\r\n        let newText = text.toLowerCase().split(\" \");\r\n        for (var i = 0; i < newText.length; i++) {\r\n            newText[i] = newText[i][0].toUpperCase() + newText[i].slice(1);\r\n        }\r\n        newText = newText.join(\" \");\r\n        setText(newText);\r\n        setRemark(\"Text Converted To Title Case!\")\r\n    }\r\n\r\n    const toAlternateCase = () => {\r\n        var newText = text.toLowerCase().split(\"\");\r\n        for (var i = 0; i < newText.length; i += 2) {\r\n            newText[i] = newText[i].toUpperCase();\r\n        }\r\n        newText = newText.join(\"\");\r\n        setText(newText);\r\n        setRemark(\"Text Converted To AlternateCase!\")\r\n    }\r\n\r\n    const speak = () => {\r\n        let msg = new SpeechSynthesisUtterance();\r\n        msg.text = text;\r\n        window.speechSynthesis.speak(msg);\r\n        setRemark(\"Text is being Read!\")\r\n    }\r\n\r\n    const clearText = () => {\r\n        let newText = \"\";\r\n        setText(newText);\r\n        setRemark(\"Text Cleared!\")\r\n    }\r\n\r\n    const removeExtraSpaces = () => {\r\n        let newText = text.split(/[  ]+/);\r\n        setText(newText.join(\" \"));\r\n        setRemark(\"Extra Spaces have been Removed!\")\r\n    }\r\n\r\n    const handleCopy = () => {\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        document.getSelection().removeAllRanges();\r\n        setRemark(\"Text Copied to Clipboard!\")\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n\r\n    // for (var count = 0; count <= text.length; count++) {\r\n    //     if (text.charAt(count).match(/[aeiouAEIOU]/)) {\r\n    //         vowelCount++;\r\n    //         setCountV(vowelCount);\r\n    //     }\r\n    // }\r\n\r\n    // for (var count = 0; count <= text.length; count++) {\r\n    //     if (text.charAt(countC).match(/[bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ]/)) {\r\n    //         consonantCount++;\r\n    //         setCountC(consonantCount);\r\n    //     }\r\n    // }\r\n\r\n    const [text, setText] = useState(\"Default Text\");\r\n    const [remark, setRemark] = useState(\"Click a Button to Start Analyzing the Text\");\r\n    // let [countV, setCountV] = useState(0);\r\n    // let [countC, setCountC] = useState(0);\r\n    // let vowelCount = 0,\r\n    //     consonantCount = 0;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"my-3\">\r\n\r\n                <h1>{props.heading}</h1>\r\n\r\n                <textarea className={`form-control bg-${props.mode}-subtle`} id=\"myBox\" style={{ backgroundColor: props.mode === 'dark' ? 'gray' : 'white' }} value={text} rows=\"5\" onChange={handleOnChange}></textarea>\r\n\r\n                <p className=\"my-3\">{remark}</p>\r\n\r\n                <button disabled={text.length === 0} className=\"btn btn-primary my-3 mx-3\" onClick={toUpperCase}>Text to UPPERCSASE</button>\r\n\r\n                <button disabled={text.length === 0} className=\"btn btn-warning my-3 mx-3\" onClick={toLowerCase}>Text to lowercase</button>\r\n\r\n                <button disabled={text.length === 0} className=\"btn btn-light my-3 mx-3\" onClick={toTitleCase}>Text to Title Case</button>\r\n\r\n                <button disabled={text.length === 0} className=\"btn btn-dark my-3 mx-3\" onClick={toAlternateCase}>Text to AlTeRnAtEcAsE</button>\r\n\r\n                <button disabled={text.length === 0} className=\"btn btn-success my-3 mx-3\" onClick={handleCopy}>Copy Text</button>\r\n\r\n                <button disabled={text.length === 0} className=\"btn btn-secondary my-3 mx-3\" onClick={removeExtraSpaces}>Remove Extra Spaces</button>\r\n\r\n                <button disabled={text.length === 0} className=\"btn btn-danger mx-3 my-3\" type=\"submit\" onClick={speak}>Speak Text</button>\r\n\r\n                <button disabled={text.length === 0} className=\"btn btn-info my-3 mx-3\" onClick={clearText}>Clear Input</button>\r\n\r\n            </div>\r\n\r\n            <div className=\"container my-3 d-flex text-center\" style={{ marginLeft: 160 }}>\r\n\r\n                <div className=\"summary mx-5\">\r\n                    <h2>TEXT SUMMARY</h2>\r\n                    <p>Input : {text.split(\" \").filter((element) => { return element.length !== 0 }).length} Words and {text.length} Characters</p>\r\n                    <p>Average Time Required to read this - {0.0033 * text.split(\" \").length} Minutes</p>\r\n                    {/* <p>Count of Vowels - {countV}</p>\r\n                <p>Count of Consonants - {countC}</p> */}\r\n                </div>\r\n\r\n                <div className=\"preview mx-5\">\r\n                    <h3>PREVIEW TEXT HERE</h3>\r\n                    {/* <p>{text === 'Default Text' ? \"Enter Text in Text Box Above to Preview it Here!\" : text}</p> */}\r\n                    <p>{text.length > 0 ? text : \"Nothing To Preview!\"}</p>\r\n                </div>\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nTextForm.propTypes = {\r\n    heading: PropTypes.string.isRequired\r\n}\r\n\r\nTextForm.defaultProps = {\r\n    heading: \"Write Text here\"\r\n}","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        <div className=\"\" style={{ height: '50px' }}>\r\n            {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\" >\r\n                <strong>{capitalize(props.alert.type)}</strong> : {props.alert.message}\r\n            </div >}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n// import PropTypes from 'prop-types';\r\n\r\nexport default function About(props) {\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"accordion m-5\" id=\"accordionExample\" style={{ height: \"100vh\" }}>\r\n                <div className={`accordion-item bg-${props.mode}-subtle`}>\r\n                    <h2 className=\"accordion-header\">\r\n                        <button className={`accordion-button text-${props.textMode} bg-${props.mode}`} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                            Q: What is the purpose of the TextUtills App?\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>A:</strong> The TextUtills App is designed to provide users with a wide range of text-related tools and utilities to enhance their productivity and simplify their workflow. Whether you need to format text, analyze its properties, or generate specific types of content, this app offers a comprehensive suite of features to meet your needs.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={`accordion-item bg-${props.mode}-subtle`}>\r\n                    <h2 className=\"accordion-header\">\r\n                        <button className={`accordion-button text-${props.textMode} bg-${props.mode}`} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            Q: What are some key features of the TextUtills App?\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>A:</strong> The TextUtills App comes equipped with various powerful features to assist users in manipulating and managing text effectively. Some key features include:\r\n                            <ul>\r\n                                <li>\r\n                                    Text Formatting: This feature allows users to easily modify the formatting of their text, such as changing the font style, size, color, and alignment.\r\n                                </li>\r\n\r\n                                <li>\r\n                                    Word Count and Character Count: This utility provides users with accurate word and character counts for their text.\r\n                                </li>\r\n\r\n                                <li>\r\n                                    Language Translation: With the language translation feature, users can effortlessly translate text between multiple languages.\r\n                                </li>\r\n                            </ul>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={`accordion-item bg-${props.mode}-subtle`}>\r\n                    <h2 className=\"accordion-header\">\r\n                        <button className={`accordion-button text-${props.textMode} bg-${props.mode}`} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                            Q: How can the TextUtills App simplify proofreading and editing tasks?\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>A:</strong> The TextUtills App simplifies proofreading and editing through its spell and grammar check, plagiarism checker, and readability analysis features.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport Alert from './Components/Alert';\nimport About from './Components/About';\nimport React, { useState } from 'react'\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n// import { BrowserRouter as Router, Switch, Route, Link, Routes } from \"react-router-dom\";\n\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');\n  const [textMode, setTextMode] = useState('dark');\n  const [alert, setAlert] = useState(null);\n  const [myStyle, setMyStyle] = useState(\n    {\n      color: 'black',\n      backgroundColor: 'white'\n    }\n  )\n\n  const [btnText, setBtnText] = useState(\"Dark Mode\")\n\n  const toggleStyle = () => {\n    if (myStyle.backgroundColor == 'white' && mode == 'light') {\n      setMyStyle(\n        {\n          color: 'white',\n          // backgroundColor: '#042743'\n          backgroundColor: 'gray'\n        }\n      )\n      setTextMode('light');\n      setMode('dark');\n      showAlert(\"Dark Mode is Enabled\", \"success\")\n      setBtnText(\"Light Mode\")\n    }\n    else {\n      setMyStyle(\n        {\n          color: 'black',\n          backgroundColor: 'white'\n        }\n      )\n      setTextMode('dark');\n      setMode('light');\n      showAlert(\"Light Mode is Enabled\", \"success\")\n      setBtnText(\"Dark Mode\")\n    }\n  }\n\n  const toggleRed = () => {\n    setMyStyle(\n      {\n        // color: 'white',\n        color: 'ivory\t',\n        backgroundColor: 'indianred',\n      }\n    )\n    setMode('danger');\n    showAlert(\"Red Theme is Enabled\", \"success\")\n    setBtnText(\"Light Mode\")\n  }\n\n  const toggleYellow = () => {\n    setMyStyle(\n      {\n        // color: 'black',\n        color: 'midnightblue',\n        backgroundColor: 'khaki'\n      }\n    )\n    setMode('warning');\n    showAlert(\"Yellow Theme is Enabled\", \"success\")\n    setBtnText(\"Light Mode\")\n  }\n\n  const toggleGreen = () => {\n    setMyStyle(\n      {\n        color: 'royalblue',\n        // backgroundColor: 'lightgreen'\n        backgroundColor: 'palegreen'\n      }\n    )\n    setMode('success');\n    showAlert(\"Green Theme is Enabled\", \"success\")\n    setBtnText(\"Light Mode\")\n  }\n\n  const showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  return (\n    <div className='overflow-hidden' style={myStyle}>\n\n      <Router>\n        < Navbar title=\"TextEdit\" mode={mode} />\n        {/* <button className=\"btn darkMode btn-dark my-3 mx-3\" onClick={toggleStyle}>{btnText}</button> */}\n\n        <h5 className='px-2 py-1 mx-2 my-1 d-flex flex-column text-center' style={{ backgroundColor: 'lightskyblue', borderRadius: 20, }}>Themes</h5>\n\n        <div className=\"btn-group mx-3 d-flex\" role=\"group\" aria-label=\"Basic mixed styles example\">\n          <button type=\"button\" className=\"btn darkMode btn-dark\" onClick={toggleStyle}>{btnText}</button>\n          <button type=\"button\" onClick={toggleRed} className=\"btn btn-danger\">Red</button>\n          <button type=\"button\" onClick={toggleYellow} className=\"btn btn-warning\">Yellow</button>\n          <button type=\"button\" onClick={toggleGreen} className=\"btn btn-success\">Green</button>\n        </div>\n\n        <Alert alert={alert} />\n\n        <div className=\"container\">\n          <Routes>\n            <Route exact path='/' element={<TextForm mode={mode} />} />\n            <Route exact path='/about' element={<About mode={mode} textMode={textMode} />} />\n          </Routes>\n        </div>\n\n      </Router>\n\n    </div >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}